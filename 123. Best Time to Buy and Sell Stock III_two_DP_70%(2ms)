public class Solution {
    public int maxProfit(int[] prices) {
        int len = prices.length;
        if(len<=1)return 0;
        int[] DP1= new int[len];
        int[] DP2= new int[len];
        int lowest=prices[0];
        for(int i=1; i<len; i++){
            if(prices[i]<lowest){
                lowest=prices[i];
            }
            DP1[i]=Math.max(prices[i]-lowest, DP1[i-1]);
        }
        int highest=prices[len-1];
        for(int i=len-2; i>=0; i--){
            if(prices[i]>highest){
                highest=prices[i];
            }
            DP2[i]= Math.max(highest-prices[i],DP2[i+1]);
        }
        int res=0;
        for(int i=0; i<len; i++){
            if(DP1[i]+DP2[i]>res){
                res=DP1[i]+DP2[i];
            }
        }
        return res;
    }
}
