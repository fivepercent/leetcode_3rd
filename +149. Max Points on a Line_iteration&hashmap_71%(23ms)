/**
 * Definition for a point.
 * class Point {
 *     int x;
 *     int y;
 *     Point() { x = 0; y = 0; }
 *     Point(int a, int b) { x = a; y = b; }
 * }
 */
public class Solution {
    public int maxPoints(Point[] points) {
        int len=points.length;
        if(len==0)return 0;
        int res=1;
        for(int i=0; i<len; i++){
            HashMap<Double, Integer> hash = new HashMap<Double, Integer>();
            hash.put((double)Integer.MAX_VALUE, 1);
            int dup=0;
            for(int j=i+1; j<len; j++){
                double slope=0;
                if(points[i].x==points[j].x&&points[i].y==points[j].y){
                    dup++;
                    continue;
                }
                if(points[i].x-points[j].x==0){
                    slope=(double)Integer.MAX_VALUE;
                }else{
                    slope= 0.0+(double)(points[i].y-points[j].y)/(double)(points[i].x-points[j].x);
                }
                int num = hash.getOrDefault(slope, 1)+1;
                hash.put(slope, num);
            }
            for(Integer num: hash.values()){
                if(num+dup>res){
                    res=num+dup;
                }
            }
        }
        return res;
    }
}
