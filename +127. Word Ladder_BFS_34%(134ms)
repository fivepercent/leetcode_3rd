public class Solution {
    public int ladderLength(String beginWord, String endWord, Set<String> wordList) {
        int len = beginWord.length();
        HashMap<String, Integer> table = new HashMap<String, Integer>();
        table.put(beginWord, 1);
        Queue<String> queue = new LinkedList<String>();
        queue.offer(beginWord);
        while(!queue.isEmpty()){
            String cur = queue.poll();
            int distance = table.get(cur);
            for(int i=0; i<len; i++){
                char[] ca=cur.toCharArray();
                for(int j=0; j<26; j++){
                    ca[i]=(char)('a'+j);
                    String nb = String.valueOf(ca);
                    if(nb.equals(endWord))return distance+1;
                    if(wordList.contains(nb)&&!table.containsKey(nb)){
                        table.put(nb, distance+1);
                        queue.offer(nb);
                    }
                }
            }
        }
        return 0;
    }
}
