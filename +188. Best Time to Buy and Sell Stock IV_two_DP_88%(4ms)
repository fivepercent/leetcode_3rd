public class Solution {
    public int maxProfit(int k, int[] prices) {
        int len=prices.length;
        if(k>len/2){
            return unlimitedSell(prices);
        }
        int[][] mustSell = new int[len][k+1];
        int[][] globalSell= new int[len][k+1];
        
        for(int i=1; i<len; i++){
            int diff=prices[i]-prices[i-1];
            for(int j=1; j<=k; j++){
                mustSell[i][j]=Math.max(globalSell[i-1][j-1]+diff, mustSell[i-1][j]+diff);
                globalSell[i][j]=Math.max(mustSell[i][j], globalSell[i-1][j]);
            }
        }
        return globalSell[len-1][k];
    }
    public int unlimitedSell(int[] prices){
        int res=0;
        for(int i=1; i<prices.length; i++){
            if(prices[i]-prices[i-1]>0){
                res+=prices[i]-prices[i-1];
            }
        }
        return res;
    }
}
