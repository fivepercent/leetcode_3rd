/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if(root==null)return res;
        pathSumHelper(root, sum, new ArrayList<Integer>(), res);
        return res;
    }
    public void pathSumHelper(TreeNode root, int sum, List<Integer> path, List<List<Integer>> res){
        path.add(root.val);
        int remaining=sum-root.val;
        if(root.left==null&&root.right==null&&remaining==0){
            List<Integer> list = new ArrayList<Integer>(path);
            res.add(list);
            path.remove(path.size()-1);
            return;
        }
        if(root.left!=null)pathSumHelper(root.left, remaining, path, res);
        if(root.right!=null)pathSumHelper(root.right, remaining, path, res);
        path.remove(path.size()-1);
        
    }
}
