/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        return buildTreeHelper(inorder, 0, inorder.length-1, postorder, postorder.length-1);
    }
    public TreeNode buildTreeHelper(int[] inorder, int start, int end, int[] postorder, int rootIndex){
        if(start>end)return null;
        int val=postorder[rootIndex];
        int position=0;
        for(int i=start; i<=end; i++){
            if(inorder[i]==val)position=i;
        }
        TreeNode root = new TreeNode(val);
        root.left=buildTreeHelper(inorder, start, position-1, postorder, rootIndex-1-(end-position));
        root.right=buildTreeHelper(inorder, position+1, end, postorder, rootIndex-1);
        return root;
    }
}
