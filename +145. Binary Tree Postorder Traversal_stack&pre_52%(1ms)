/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<Integer>();
        if(root==null)return res;
        Stack<TreeNode> stack = new Stack<TreeNode>();
        TreeNode pre = null;
        stack.push(root);
        while(!stack.isEmpty()){
            TreeNode cur = stack.peek();
            if(pre==null||pre.left==cur||pre.right==cur){
                if(cur.left!=null)stack.push(cur.left);
                else if(cur.right!=null)stack.push(cur.right);
            }else if(cur.left==pre){
                if(cur.right!=null)stack.push(cur.right);
            }else{
                res.add(cur.val);
                stack.pop();
            }
            pre=cur;
        }
        return res;
    }
}
