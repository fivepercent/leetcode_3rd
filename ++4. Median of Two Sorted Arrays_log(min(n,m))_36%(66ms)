public class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int len1=nums1.length;
        int len2=nums2.length;
        if(len1>len2){
            return findMedianSortedArrays(nums2, nums1);
        }
        int k = (len1+len2-1)/2;
        int start=0;
        int end = Math.min(k, len1);
        while(start<end){
            int mid1=(start+end)/2;
            int mid2=k-mid1;
            if(nums1[mid1]<nums2[mid2]){
                start=mid1+1;
            }else{
                end=mid1;
            }
        }
        double a = (double)Math.max(start>0?nums1[start-1]:Integer.MIN_VALUE, k-start>=0?nums2[k-start]:Integer.MIN_VALUE);
        if((len1+len2)%2==1){
            return a;
        }
        double b =(double)Math.min(start<len1?nums1[start]:Integer.MAX_VALUE, k-start+1<len2?nums2[k-start+1]:Integer.MAX_VALUE);
        return (a+b)/2;
    }
}
