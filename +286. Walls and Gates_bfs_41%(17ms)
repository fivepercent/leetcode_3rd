public class Solution {
    public class point{
        int x;
        int y;
        public point(int x, int y){
            this.x=x;
            this.y=y;
        }
    }
    public void wallsAndGates(int[][] rooms) {
        int row=rooms.length;
        if(row==0)return;
        int col=rooms[0].length;
        int[] dx=new int[]{0, 0, 1, -1};
        int[] dy=new int[]{1, -1, 0, 0};
        Queue<point> queue = new LinkedList<point>();
        for(int i=0; i<row; i++){
            for(int j=0; j<col; j++){
                if(rooms[i][j]==0){
                    queue.offer(new point(i, j));
                }
            }
        }
        while(!queue.isEmpty()){
            point cur=queue.poll();
            for(int m=0; m<4; m++){
                int x=cur.x+dx[m];
                int y=cur.y+dy[m];
                if(x>=0&&x<row&&y>=0&&y<col&&rooms[x][y]!=0&&rooms[x][y]!=-1&&rooms[x][y]>rooms[cur.x][cur.y]+1){
                    rooms[x][y]=rooms[cur.x][cur.y]+1;
                    queue.offer(new point(x, y));
                }
            }
        }
    }
}
